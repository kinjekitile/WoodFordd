using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Woodford.Core.DomainModel.Enums;
using Woodford.Core.DomainModel.Models;
using Woodford.Core.Interfaces;

namespace Woodford.Core.ApplicationServices.Commands {
    public class UserRegisterCommand : ICommand {
        public UserModel User { get; set; }
        public string Password { get; set; }
        public bool Success { get; set; }

        public bool IsAdminCreatedAccount { get; set; }
    }


    public class UserRegisterCommandHandler : ICommandHandler<UserRegisterCommand> {

        private IUserService _userService;
        private IAuthenticate _authenticate;
        private INotify _notify;


        public string Utilities { get; private set; }

        public UserRegisterCommandHandler(IUserService userService, IAuthenticate authenticate, INotify notify) {
            _userService = userService;
            _authenticate = authenticate;
            _notify = notify;

        }

        public void Handle(UserRegisterCommand command) {



            command.User.DateCreated = DateTime.Now;

          

            string result = _authenticate.CreateUser(command.User, command.Password);
            var user = _userService.GetByUsername(command.User.Email);
            command.User.Id = user.Id;

            UserRegistrationNotifcationModel emailModel = new UserRegistrationNotifcationModel();
            emailModel.User = command.User;

            if (command.User.IsLoyaltyMember) {
                if (command.User.LoyaltyTierId == 0) {
                    command.User.LoyaltyTierId = (int)LoyaltyTierLevel.Green;
                }
                _userService.EnrollLoyalty(user.Id);
                user = _userService.GetById(user.Id);
                emailModel.User = user;
            }

            emailModel.AutoGeneratedPassword = command.Password;

            if (command.IsAdminCreatedAccount) {
                
                emailModel.HasAutoGeneratedPassword = true;
                emailModel.IsAdminGenerated = true;
            } else {
                _authenticate.LogOn(command.User.Email, command.Password);
                emailModel.HasAutoGeneratedPassword = false;
                emailModel.IsAdminGenerated = false;
            }

            //_notify.SendNotifyAccountCreated(emailModel, Setting.Public_Website_Domain);

            if (command.User.IsLoyaltyMember) {
                
                _notify.SendNotifyLoyaltyAccountCreatedByAdmin(emailModel, Setting.Public_Website_Domain);
            }

            _notify.SendNotifyAccountCreatedSMS(emailModel, Setting.Public_Website_Domain);

            command.Success = true;
        }
    }
}
