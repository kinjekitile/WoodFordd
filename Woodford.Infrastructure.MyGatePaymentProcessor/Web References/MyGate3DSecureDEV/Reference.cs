//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Woodford.Infrastructure.MyGatePaymentProcessor.MyGate3DSecureDEV {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="3DSecure.cfcSoapBinding", Namespace="https://dev-3dsecure.mygateglobal.com/3DSecure.cfc")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Map))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(QueryBean))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CFCInvocationException))]
    public partial class Item3DSecure1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback lookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback authenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback tokenLookupOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Item3DSecure1() {
            this.Url = global::Woodford.Infrastructure.MyGatePaymentProcessor.Properties.Settings.Default.Woodford_Infrastructure_MyGatePaymentProcessor_MyGate3DSecureDEV_3DSecure1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event lookupCompletedEventHandler lookupCompleted;
        
        /// <remarks/>
        public event authenticateCompletedEventHandler authenticateCompleted;
        
        /// <remarks/>
        public event tokenLookupCompletedEventHandler tokenLookupCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="https://dev-3dsecure.mygateglobal.com/3DSecure.cfc", ResponseNamespace="https://dev-3dsecure.mygateglobal.com/3DSecure.cfc")]
        [return: System.Xml.Serialization.SoapElementAttribute("lookupReturn")]
        public object[] lookup(string MerchantID, string ApplicationID, double Mode, string PAN, string PANExpr, string PurchaseAmount, string UserAgent, string BrowserHeader, string OrderNumber, string OrderDesc, string Recurring, string RecurringFrequency, string RecurringEnd, string Installment) {
            object[] results = this.Invoke("lookup", new object[] {
                        MerchantID,
                        ApplicationID,
                        Mode,
                        PAN,
                        PANExpr,
                        PurchaseAmount,
                        UserAgent,
                        BrowserHeader,
                        OrderNumber,
                        OrderDesc,
                        Recurring,
                        RecurringFrequency,
                        RecurringEnd,
                        Installment});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void lookupAsync(string MerchantID, string ApplicationID, double Mode, string PAN, string PANExpr, string PurchaseAmount, string UserAgent, string BrowserHeader, string OrderNumber, string OrderDesc, string Recurring, string RecurringFrequency, string RecurringEnd, string Installment) {
            this.lookupAsync(MerchantID, ApplicationID, Mode, PAN, PANExpr, PurchaseAmount, UserAgent, BrowserHeader, OrderNumber, OrderDesc, Recurring, RecurringFrequency, RecurringEnd, Installment, null);
        }
        
        /// <remarks/>
        public void lookupAsync(string MerchantID, string ApplicationID, double Mode, string PAN, string PANExpr, string PurchaseAmount, string UserAgent, string BrowserHeader, string OrderNumber, string OrderDesc, string Recurring, string RecurringFrequency, string RecurringEnd, string Installment, object userState) {
            if ((this.lookupOperationCompleted == null)) {
                this.lookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupOperationCompleted);
            }
            this.InvokeAsync("lookup", new object[] {
                        MerchantID,
                        ApplicationID,
                        Mode,
                        PAN,
                        PANExpr,
                        PurchaseAmount,
                        UserAgent,
                        BrowserHeader,
                        OrderNumber,
                        OrderDesc,
                        Recurring,
                        RecurringFrequency,
                        RecurringEnd,
                        Installment}, this.lookupOperationCompleted, userState);
        }
        
        private void OnlookupOperationCompleted(object arg) {
            if ((this.lookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupCompleted(this, new lookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="https://dev-3dsecure.mygateglobal.com/3DSecure.cfc", ResponseNamespace="https://dev-3dsecure.mygateglobal.com/3DSecure.cfc")]
        [return: System.Xml.Serialization.SoapElementAttribute("authenticateReturn")]
        public object[] authenticate(string TransactionIndex, string PAResPayload) {
            object[] results = this.Invoke("authenticate", new object[] {
                        TransactionIndex,
                        PAResPayload});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void authenticateAsync(string TransactionIndex, string PAResPayload) {
            this.authenticateAsync(TransactionIndex, PAResPayload, null);
        }
        
        /// <remarks/>
        public void authenticateAsync(string TransactionIndex, string PAResPayload, object userState) {
            if ((this.authenticateOperationCompleted == null)) {
                this.authenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticateOperationCompleted);
            }
            this.InvokeAsync("authenticate", new object[] {
                        TransactionIndex,
                        PAResPayload}, this.authenticateOperationCompleted, userState);
        }
        
        private void OnauthenticateOperationCompleted(object arg) {
            if ((this.authenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenticateCompleted(this, new authenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="https://dev-3dsecure.mygateglobal.com/3DSecure.cfc", ResponseNamespace="https://dev-3dsecure.mygateglobal.com/3DSecure.cfc")]
        [return: System.Xml.Serialization.SoapElementAttribute("tokenLookupReturn")]
        public object[] tokenLookup(string MerchantID, string ApplicationID, double Mode, string ClientToken, string PurchaseAmount, string UserAgent, string BrowserHeader, string OrderNumber, string OrderDesc, string Recurring, string RecurringFrequency, string RecurringEnd, string Installment) {
            object[] results = this.Invoke("tokenLookup", new object[] {
                        MerchantID,
                        ApplicationID,
                        Mode,
                        ClientToken,
                        PurchaseAmount,
                        UserAgent,
                        BrowserHeader,
                        OrderNumber,
                        OrderDesc,
                        Recurring,
                        RecurringFrequency,
                        RecurringEnd,
                        Installment});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void tokenLookupAsync(string MerchantID, string ApplicationID, double Mode, string ClientToken, string PurchaseAmount, string UserAgent, string BrowserHeader, string OrderNumber, string OrderDesc, string Recurring, string RecurringFrequency, string RecurringEnd, string Installment) {
            this.tokenLookupAsync(MerchantID, ApplicationID, Mode, ClientToken, PurchaseAmount, UserAgent, BrowserHeader, OrderNumber, OrderDesc, Recurring, RecurringFrequency, RecurringEnd, Installment, null);
        }
        
        /// <remarks/>
        public void tokenLookupAsync(string MerchantID, string ApplicationID, double Mode, string ClientToken, string PurchaseAmount, string UserAgent, string BrowserHeader, string OrderNumber, string OrderDesc, string Recurring, string RecurringFrequency, string RecurringEnd, string Installment, object userState) {
            if ((this.tokenLookupOperationCompleted == null)) {
                this.tokenLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OntokenLookupOperationCompleted);
            }
            this.InvokeAsync("tokenLookup", new object[] {
                        MerchantID,
                        ApplicationID,
                        Mode,
                        ClientToken,
                        PurchaseAmount,
                        UserAgent,
                        BrowserHeader,
                        OrderNumber,
                        OrderDesc,
                        Recurring,
                        RecurringFrequency,
                        RecurringEnd,
                        Installment}, this.tokenLookupOperationCompleted, userState);
        }
        
        private void OntokenLookupOperationCompleted(object arg) {
            if ((this.tokenLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.tokenLookupCompleted(this, new tokenLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xml.apache.org/xml-soap")]
    public partial class Map {
        
        private mapItem[] itemField;
        
        /// <remarks/>
        public mapItem[] item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xml.apache.org/xml-soap")]
    public partial class mapItem {
        
        private object keyField;
        
        private object valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://rpc.xml.coldfusion")]
    public partial class QueryBean {
        
        private string[] columnListField;
        
        private object[] dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] columnList {
            get {
                return this.columnListField;
            }
            set {
                this.columnListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://rpc.xml.coldfusion")]
    public partial class CFCInvocationException {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void lookupCompletedEventHandler(object sender, lookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void authenticateCompletedEventHandler(object sender, authenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal authenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void tokenLookupCompletedEventHandler(object sender, tokenLookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class tokenLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal tokenLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591