@model RateFindViewModel
@{
    ViewBag.Title = "Find Rates";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section H1 {
    <h1>Find Rates</h1>
}

<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title">Find Rates</h3>
    </div><!-- /.box-header -->

    @using (Html.BeginForm("Index", "FindRates", FormMethod.Post, new { @class = "form-horizontal", role = "form" })) {

        <div class="box-body">

            <div class="form-group">
                @Html.LabelFor(m => m.SelectedBranchIds, "Branches", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.CheckBoxListFor(m => m.SelectedBranchIds, m => m.AllBranches, x => x.Id, x => x.Title, m => m.SelectedBranches)
                    @Html.ValidationMessageFor(m => m.SelectedBranchIds)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.RateCodeId, "Rate Code", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.RateCodeFor(m => m.RateCodeId, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.RateCodeId)
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button type="submit" class="btn btn-primary">Find Rates</button>
                </div>
            </div>



        </div>

    }

    @if (Model.SearchRun) {
        if (Model.Results.Items.Count() > 0) {
            <div class="box-body no-padding">
                <table class="table table-condensed">
                    <tr>
                        <td></td>
                        <th scope="col">Result</th>
                    </tr>

                    @foreach (var r in Model.Results.Items) {

                        RateSearchAndUpdateViewModel resultModelRate = new RateSearchAndUpdateViewModel();
                        resultModelRate.Search = new RateSearchModel();
                        resultModelRate.SelectedBranchIdsString = String.Join(",", Model.SelectedBranchIds);

                        resultModelRate.Search.RateCodeId = Model.RateCodeId;
                        resultModelRate.Search.IsOpenEnded = r.IsOpenEnded;
                        resultModelRate.Search.StartDate = r.StartDate;
                        resultModelRate.Search.EndDate = r.EndDate;

                        //DateTime? startDate = r.StartDate;
                        //DateTime? endDate = r.EndDate;

                        //object routeVals = null;
                        //if (r.IsOpenEnded) {
                        //    routeVals = new { branches = string.Join(",", Model..BranchIds), ratecodeid = Model.Filter.RateCodeId, isopenended = r.IsOpenEnded };
                        //} else {
                        //    routeVals = new { branches = string.Join(",", Model.Filter.BranchIds), ratecodeid = Model.Filter.RateCodeId, isopenended = r.IsOpenEnded, startdate = r.StartDate, endDate = r.EndDate };
                        //}

                        <tr>

                            <td>
                                @{Html.RenderPartial("_FindRatesResultPartial", resultModelRate);}
                            </td>
                            <td>@r.Title - @String.Join(",", Model.SelectedBranchIds)</td>
                        </tr>
                    }

                </table>
            </div>
        } else {
            <p>No results</p>
                                    }

                                    RateSearchAndUpdateViewModel resultModel = new RateSearchAndUpdateViewModel();
                                    resultModel.Search = new RateSearchModel();
                                    resultModel.SelectedBranchIdsString = String.Join(",", Model.SelectedBranchIds);

                                    resultModel.Search.RateCodeId = Model.RateCodeId;
                                 

                                    using (Html.BeginForm("Filter", "RateUpdate")) {
                                        <input type="hidden" id="SelectedBranchIdsString" name="SelectedBranchIdsString" value="@resultModel.SelectedBranchIdsString" />
                                        <input type="hidden" id="Search_RateCodeId" name="Search.RateCodeId" value="@resultModel.Search.RateCodeId" />
                                        
                                        <button type="submit" class="btn btn-primary">Add</button>
                                    }
        @*@Html.ActionLink("Add rates", "Update", "RateUpdate")*@

    }

</div>