@model RateSearchViewModel
@{
    ViewBag.Title = "Rates";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section H1 {
    <h1>Rates Search</h1>
}

<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title">Filter Rates</h3>
    </div><!-- /.box-header -->

    @using (Html.BeginForm("Index", "Rates", FormMethod.Post, new { @class = "form-horizontal", role = "form" })) {

        <div class="box-body">

            <div class="form-group">
                @Html.LabelFor(m => m.SelectedBranchIds, "Branches", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.CheckBoxListFor(m => m.SelectedBranchIds, m => m.Branches, x => x.Id, x => x.Title, m => m.SelectedBranches)
                    @Html.ValidationMessageFor(m => m.SelectedBranchIds)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Filter.RateCodeId, "Rate Code", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.RateCodeFor(m => m.Filter.RateCodeId, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Filter.RateCodeId)
                </div>
            </div>            
            
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button type="submit" class="btn btn-primary">Filter</button>
                </div>
            </div>



        </div>

    }

    @if (Model.Results != null) {
        if (Model.Results.Count() > 0) {
            <div class="box-body no-padding">
                <table class="table table-condensed">
                    <tr>
                        <td></td>
                        <th scope="col">Result</th>
                    </tr>

                    @foreach (var r in Model.Results) {

                        DateTime? startDate = r.StartDate;
                        DateTime? endDate = r.EndDate;

                        object routeVals = null;
                        if (r.IsOpenEnded) {
                            routeVals = new { branches = string.Join(",", Model.Filter.BranchIds), ratecodeid = Model.Filter.RateCodeId, isopenended = r.IsOpenEnded };
                        } else {
                            routeVals = new { branches = string.Join(",", Model.Filter.BranchIds), ratecodeid = Model.Filter.RateCodeId, isopenended = r.IsOpenEnded, startdate = r.StartDate, endDate = r.EndDate };
                        }                        

                        <tr>

                            <td>@Html.ActionLink("Edit Rate for selected filter", "Edit", "Rates", routeVals, null)</td>
                            <td>@r.Title - @r.UrlBranches</td>
                        </tr>
                    }

                </table>
            </div>
        } else {
            <p>No results</p>
        }

        if (Model.Filter != null) {
            <p>@Html.ActionLink("Add Rates for selected filter", "Add", "Rates", new { branches = string.Join(",", Model.SelectedBranchIds), ratecodeid = Model.Filter.RateCodeId }, null)</p>
        }

    }
</div>

