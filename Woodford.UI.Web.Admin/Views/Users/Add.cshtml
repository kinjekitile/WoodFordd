@model UserViewModel
@{
    ViewBag.Title = "Add User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section H1 {
    <h1>Woodford Users</h1>
}

<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title">Add User</h3>

    </div><!-- /.box-header -->



    @using (Html.BeginForm("Add", "Users", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" })) {

        <div class="box-body">

            @Html.ValidationSummary()

            <div class="form-group">
                @Html.LabelFor(m => m.User.Email, "Email", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.User.Email, new { placeholder = "Email", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.User.Email)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.User.FirstName, "First Name", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.User.FirstName, new { placeholder = "First Name", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.User.FirstName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.User.LastName, "Last Name", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.User.LastName, new { placeholder = "Last Name", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.User.LastName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.User.MobileNumber, "Mobile Number", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.User.MobileNumber, new { placeholder = "Mobile Number", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.User.MobileNumber)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.User.IdNumber, "ID Number", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.User.IdNumber, new { placeholder = "ID Number", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.User.IdNumber)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.User.CorporateId, "Corporate", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.CorporateFor(m => m.User.CorporateId, new { placeholder = "Corporate", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.User.CorporateId)
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <div class="checkbox">
                        <label for="@Html.IdFor(m => m.User.IsLoyaltyMember)">
                            @Html.CheckBoxFor(m => m.User.IsLoyaltyMember) Is Loyalty Member
                        </label>
                    </div>
                    @Html.ValidationMessageFor(m => m.User.IsLoyaltyMember)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.User.LoyaltyTierId, "Loyalty Tier", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.LoyaltyBenefitTierFor(m => m.User.LoyaltyTierId, new { placeholder = "Loyalty Tier", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.User.LoyaltyTierId)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.AdminPassword, "Admin generated Password", new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.AdminPassword, new { placeholder = "Leave empty to auto-generate", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.AdminPassword)
                </div>
            </div>

            @foreach (var role in Enum.GetValues(typeof(Woodford.Core.DomainModel.Enums.UserRoles)).Cast<Woodford.Core.DomainModel.Enums.UserRoles>()) {
                <div class="form-group">
                    <label for="role@(role.ToString())" class="col-sm-2 control-label">@role.ToString()</label>
                    <div class="col-sm-10">
                        @{  bool isChecked = Model.User.Roles.Select(x => x.Title).Contains(role.ToString()); }
                        <input type="checkbox" id="role@(role.ToString())" @(isChecked ? "checked=\"checked\"" : "") name="role@(role.ToString())" @(isChecked ? "checked=\"checked\"" : "") />
                    </div>
                </div>
                            }

            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button type="submit" class="btn btn-primary">Add User</button>
                </div>
            </div>


        </div>
    }
</div>